---
import NavBar from "../components/NavBar";
import StarField from "../components/StarField";
import SocialLinks from "../components/SocialLinks";

interface Props {
    title: string;
    description?: string;
}

const { title, description = "Nick Russo - Software Engineer" } = Astro.props;
const pathname = Astro.url.pathname;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
        <meta name="generator" content={Astro.generator} />
        <meta name="description" content={description} />
        <title>{title}</title>
        
        <!-- Geist and JetBrains Mono fonts -->
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        
        <!-- Load Geist for body text and JetBrains Mono for code -->
        <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet">
        <!-- Load Geist from Vercel CDN for better performance -->
        <link href="https://cdn.jsdelivr.net/npm/geist@1.3.0/dist/fonts/geist/style.css" rel="stylesheet">
        <!-- Devicons for programming language and tool icons -->
        <link href="https://cdn.jsdelivr.net/gh/devicons/devicon@latest/devicon.min.css" rel="stylesheet">
        
        <slot name="head" />
    </head>
    <body class="bg-dark-950 text-white min-h-screen">
        <StarField client:idle />
        <NavBar client:visible pathname={pathname} />

        <main class="pt-24 pb-16 min-h-screen">
            <slot />
        </main>

        <footer
            class="text-center text-gray-400 text-sm border-t border-dark-800 py-8 mt-16"
        >
            <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
                <SocialLinks client:visible />
                <p class="mt-2">
                    &copy; {new Date().getFullYear()} Nick Russo. All rights reserved.
                </p>
            </div>
        </footer>
    </body>
</html>

<style is:global>
    @tailwind base;
    @tailwind components;
    @tailwind utilities;

    :root {
        --card-bg-color: rgb(10, 10, 10); /* dark-900 */
        --card-border: rgba(255, 255, 255, 0.06);
        --card-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.4), 0 1px 2px 0 rgba(0, 0, 0, 0.2);
        --card-shadow-hover: 0 4px 12px 0 rgba(0, 0, 0, 0.5), 0 2px 6px 0 rgba(0, 0, 0, 0.3);
    }

    .card-container {
        @apply backdrop-blur-sm p-6 rounded-xl transition-all duration-300 border;
        background-color: var(--card-bg-color);
        border-color: var(--card-border);
        box-shadow: var(--card-shadow);
    }

    /* Interactive cards only - for clickable content */
    .card-interactive:hover {
        box-shadow: var(--card-shadow-hover);
        transform: translateY(-1px);
        border-color: rgba(255, 255, 255, 0.12);
    }

    /* Content cards - subtle hover for reading areas */
    .card-content:hover {
        border-color: rgba(255, 255, 255, 0.08);
    }

    /* Remove any accidental group hover effects on cards */
    .group:hover .card-container:not(.card-interactive) {
        transform: none;
    }

    .skill-card {
        @apply backdrop-blur-sm px-4 py-2.5 rounded-lg transition-all duration-300 border;
        background-color: rgb(26, 26, 26); /* dark-800 */
        border-color: rgba(255, 255, 255, 0.05);
        box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3);
    }

    .skill-card:hover {
        box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.4);
        transform: translateY(-1px);
        border-color: rgba(255, 255, 255, 0.08);
    }

    @keyframes twinkle {
        0%,
        100% {
            opacity: 0.2;
        }
        50% {
            opacity: 1;
        }
    }

    @keyframes float {
        0%,
        100% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(-10px);
        }
    }

    @keyframes shine {
        0% {
            background-position: -100% 0;
        }
        100% {
            background-position: 200% 0;
        }
    }

    .shine-text {
        position: relative;
    }

    .shine-text::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(
            90deg,
            rgba(255, 255, 255, 0) 0%,
            rgba(255, 255, 255, 0.2) 50%,
            rgba(255, 255, 255, 0) 100%
        );
        background-size: 200% 100%;
        animation: shine 4s ease-in-out infinite;
        pointer-events: none;
    }

    html {
        scroll-behavior: smooth;
    }

    body {
        font-family:
            "Geist",
            system-ui,
            -apple-system,
            BlinkMacSystemFont,
            "Segoe UI",
            Roboto,
            "Helvetica Neue",
            Arial,
            sans-serif;
        color: #f8f8f8; /* Default to off-white instead of pure white */
    }

    /* Monospace font for code elements */
    code, pre, .font-mono {
        font-family:
            "JetBrains Mono",
            "SF Mono",
            Monaco,
            "Inconsolata",
            "Roboto Mono",
            "Source Code Pro",
            Consolas,
            "Liberation Mono",
            Menlo,
            monospace;
    }

    /* Custom scrollbar */
    ::-webkit-scrollbar {
        width: 8px;
    }

    ::-webkit-scrollbar-track {
        background: #000000; /* dark-950 */
    }

    ::-webkit-scrollbar-thumb {
        background: #1a1a1a; /* dark-800 */
        border-radius: 4px;
    }

    ::-webkit-scrollbar-thumb:hover {
        background: #2a2a2a; /* dark-700 */
    }
</style>
