---
/**
 * Enhanced code block component with copy functionality
 * Integrates with Shiki-rendered code blocks
 */
---

<script>
  // Find all pre elements with data-language (Shiki-generated)
  const codeBlocks = document.querySelectorAll('pre[data-language]');
  
  codeBlocks.forEach(pre => {
    // Skip if already enhanced
    if (pre.querySelector('.code-block-header')) return;
    
    const language = pre.getAttribute('data-language') || 'text';
    const code = pre.textContent || '';
    
    // Create header with language and copy button
    const header = document.createElement('div');
    header.className = 'code-block-header flex justify-between items-center px-4 py-2 border-b border-white/10 text-sm text-text-tertiary';
    header.style.backgroundColor = 'var(--color-surface)';
    
    // Language badge
    const languageBadge = document.createElement('span');
    languageBadge.className = 'text-accent-blue font-medium';
    languageBadge.textContent = language.toUpperCase();
    
    // Copy button
    const copyButton = document.createElement('button');
    copyButton.className = 'copy-btn flex items-center gap-2 px-3 py-1 rounded transition-colors duration-200 text-text-tertiary hover:text-accent-blue';
    copyButton.style.setProperty('--hover-bg', 'var(--color-surface-elevated)');
    copyButton.innerHTML = `
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
      </svg>
      <span class="copy-text">Copy</span>
    `;
    
    // Copy functionality
    let copyTimeout: number;
    copyButton.addEventListener('click', async () => {
      try {
        await navigator.clipboard.writeText(code);
        const textSpan = copyButton.querySelector('.copy-text') as HTMLElement;
        const icon = copyButton.querySelector('svg') as SVGElement;
        
        // Update button state
        textSpan.textContent = 'Copied!';
        copyButton.classList.add('text-green-400');
        icon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>`;
        
        // Reset after 2 seconds
        clearTimeout(copyTimeout);
        copyTimeout = setTimeout(() => {
          textSpan.textContent = 'Copy';
          copyButton.classList.remove('text-green-400');
          icon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>`;
        }, 2000);
      } catch (err) {
        const textSpan = copyButton.querySelector('.copy-text') as HTMLElement;
        textSpan.textContent = 'Failed';
      }
    });
    
    // Add header elements
    header.appendChild(languageBadge);
    header.appendChild(copyButton);
    
    // Wrap pre in container and add header
    const wrapper = document.createElement('div');
    wrapper.className = 'code-block-wrapper rounded-lg overflow-hidden border border-white/10 my-6';
    wrapper.style.backgroundColor = 'var(--color-surface)';
    
    // Insert wrapper before pre
    pre.parentNode?.insertBefore(wrapper, pre);
    
    // Move pre into wrapper and add header
    wrapper.appendChild(header);
    wrapper.appendChild(pre);
    
    // Add styling to pre
    pre.classList.add('!mt-0', '!rounded-none', '!border-0');
  });
</script>