---
import Layout from "../layouts/Layout.astro";

// Professional experience - only recent SWE roles
const experience = [
    {
        company: "Omnitier, Inc.",
        title: "Software Engineer",
        period: "January 2021 - May 2023",
        achievements: [
            "Reduced Python backend service runtime by ~90% (45 min → 5 min) by migrating to os.scandir() and Path objects, minimizing filesystem system calls",
            "Built comprehensive regression testing infrastructure using Go and Python, improving code stability across distributed services",
            "Developed gRPC API integrations and enhanced React frontend features, maintaining full-stack service reliability"
        ]
    }
];

// Education from PDF + LinkedIn
const education = [
    {
        school: "42 Silicon Valley",
        location: "Fremont, CA",
        degree: "Computer Science",
        period: "2018 - 2020"
    },
    {
        school: "Las Positas College",
        location: "Livermore, CA",
        degree: "Computer Science",
        period: "2014 - 2015, 2016 - 2018",
        detail: "Computer Science Club President 2016 - 2017"
    },
    {
        school: "Dev Bootcamp",
        location: "San Francisco, CA",
        degree: "Web Development",
        period: "March 2016 - May 2016"
    }
];

// Current projects
const projects = [
    {
        name: "OmenDB",
        description: "PostgreSQL-compatible vector database in Rust implementing HNSW indexing, binary quantization, and hybrid HTAP architecture. Production-validated at 1M vector scale",
        tech: ["Rust", "Vector Database", "Database Systems"]
    },
    {
        name: "Zenith",
        url: "https://github.com/nijaru/zenith",
        description: "Python web framework with chainable query APIs, zero-config setup, and async request handling. Built for developer experience and production performance",
        tech: ["Python", "Web Framework", "API Design"]
    },
    {
        name: "sy",
        url: "https://github.com/nijaru/sy",
        description: "File synchronization tool in Rust implementing delta sync with streaming architecture. 2-11x faster than rsync through parallel transfers and optimization",
        tech: ["Rust", "CLI Tools", "Systems Programming"]
    },
    {
        name: "Kombrucha",
        url: "https://github.com/nijaru/kombrucha",
        description: "Homebrew-compatible package manager with fully parallelized API operations and in-memory LRU caching. 5.5x faster for upgrade operations",
        tech: ["Rust", "Package Management", "Developer Tools"]
    },
    {
        name: "Pacabot",
        description: "AI trading bot with multi-agent analysis system using 13 data sources including market data, SEC filings, news, and social sentiment. Real-time research capability with automated risk management. Production-ready and running 24/7",
        tech: ["Python", "AI/ML", "Finance"]
    }
];

// Awards
const awards = [
    {
        title: "2nd Place & Ingenico Winner, Money 20/20 Las Vegas 2016",
        project: "Team Kairos",
        description: "Developed cross-terminal payment application with REST API for business partnerships. Built with Go and PostgreSQL, deployed on CoreOS"
    }
];

// Skills - updated based on current work
const skills = {
    languages: [
        { name: "Python", level: "3+ years" },
        { name: "Go", level: "3+ years" },
        { name: "Rust", level: "1 year" },
        { name: "C", level: "1 year" },
        { name: "C++", level: "1 year" },
        { name: "JavaScript", level: "<1 year" },
        { name: "Mojo", level: "<1 year" }
    ],
    backend: ["FastAPI", "Flask", "Django", "Zenith", "Ruby on Rails", "gRPC"],
    databases: ["PostgreSQL", "SQLite", "MySQL", "Redis"],
    infrastructure: ["Docker", "Linux (Fedora, Ubuntu, RHEL/CentOS, CoreOS, Gentoo)", "Kubernetes (Beginner)"],
    cloudPlatforms: ["AWS", "GCP", "DigitalOcean", "Cloudflare"],
    tools: ["Git", "GitHub Actions", "Zed", "Neovim", "mise", "uv", "Ghostty", "Fish", "ripgrep", "fzf", "fd", "Tailscale"]
};
---

<Layout
    title="Nicholas Russo - Resume"
    description="Software developer with 2.5 years of experience specializing in backend development, distributed systems, AI/ML infrastructure, and high-performance databases."
    ogType="profile"
>
    <!-- Resume Container -->
    <div class="py-6 print:py-0">
        <div class="container mx-auto max-w-5xl px-6 print:px-0">

            <!-- Header -->
            <section class="mb-6 print:mb-3">
                <div class="text-center">
                    <h1 class="text-5xl font-bold text-text-primary mb-2 print:text-3xl print:mb-1">
                        Nicholas Russo
                    </h1>
                    <div class="flex flex-wrap justify-center gap-2 text-sm text-text-secondary mb-4 print:text-xs print:mb-2 print:gap-1">
                        <span>nijaru7[at]gmail.com</span>
                        <span class="text-text-tertiary">•</span>
                        <a href="https://github.com/nijaru" class="hover:text-accent-blue transition-colors print:text-text-primary">
                            github.com/nijaru
                        </a>
                        <span class="text-text-tertiary">•</span>
                        <a href="https://nijaru.com" class="hover:text-accent-blue transition-colors print:text-text-primary">
                            nijaru.com
                        </a>
                    </div>
                    <a href="/Nicholas_Russo_Resume.pdf" download class="btn btn-primary print:hidden">
                        Download PDF
                    </a>
                </div>
            </section>

            <div class="max-w-4xl mx-auto">
                <!-- Summary -->
                <section class="mb-6 print:mb-3">
                    <h2 class="text-xl font-bold text-accent-blue mb-3 pb-1 border-b-2 border-accent-blue/30 print:text-base print:mb-2">
                        SUMMARY
                    </h2>
                    <p class="text-text-secondary leading-relaxed print:text-xs print:leading-tight">
                        Backend engineer with 2.5 years of experience building and optimizing distributed systems. Work includes performance optimization, API development, database systems, and testing infrastructure. Open source projects focus on systems programming and developer tooling.
                    </p>
                </section>

                <!-- Skills -->
                <section class="mb-6 print:mb-3">
                    <h2 class="text-xl font-bold text-accent-blue mb-3 pb-1 border-b-2 border-accent-blue/30 print:text-base print:mb-2">
                        SKILLS
                    </h2>
                    <div class="space-y-2 print:space-y-1">
                        <div class="grid grid-cols-[140px_1fr] gap-3 items-start print:gap-1">
                            <span class="font-semibold text-text-primary text-sm">Languages:</span>
                            <span class="text-text-secondary text-sm">
                                {skills.languages.map((lang, i) => (
                                    <span>{lang.name} ({lang.level}){i < skills.languages.length - 1 ? ', ' : ''}</span>
                                ))}
                            </span>
                        </div>
                        <div class="grid grid-cols-[140px_1fr] gap-3 items-start print:gap-1">
                            <span class="font-semibold text-text-primary text-sm">Backend/APIs:</span>
                            <span class="text-text-secondary text-sm">{skills.backend.join(', ')}</span>
                        </div>
                        <div class="grid grid-cols-[140px_1fr] gap-3 items-start print:gap-1">
                            <span class="font-semibold text-text-primary text-sm">Databases:</span>
                            <span class="text-text-secondary text-sm">{skills.databases.join(', ')}</span>
                        </div>
                        <div class="grid grid-cols-[140px_1fr] gap-3 items-start print:gap-1">
                            <span class="font-semibold text-text-primary text-sm">Infrastructure:</span>
                            <span class="text-text-secondary text-sm">{skills.infrastructure.join(', ')}</span>
                        </div>
                        <div class="grid grid-cols-[140px_1fr] gap-3 items-start print:gap-1">
                            <span class="font-semibold text-text-primary text-sm">Cloud Platforms:</span>
                            <span class="text-text-secondary text-sm">{skills.cloudPlatforms.join(', ')}</span>
                        </div>
                        <div class="grid grid-cols-[140px_1fr] gap-3 items-start print:gap-1">
                            <span class="font-semibold text-text-primary text-sm">Tools:</span>
                            <span class="text-text-secondary text-sm">{skills.tools.join(', ')}</span>
                        </div>
                    </div>
                </section>

                <!-- Experience -->
                <section class="mb-6 print:mb-3">
                    <h2 class="text-xl font-bold text-accent-blue mb-3 pb-1 border-b-2 border-accent-blue/30 print:text-base print:mb-2">
                        EXPERIENCE
                    </h2>
                    <div class="space-y-4 print:space-y-2">
                        {experience.map((job) => (
                            <div>
                                <div class="flex justify-between items-baseline mb-1">
                                    <h3 class="text-base font-bold text-text-primary print:text-sm">
                                        {job.title}
                                    </h3>
                                    <span class="text-xs text-text-tertiary whitespace-nowrap ml-4">
                                        {job.period}
                                    </span>
                                </div>
                                <p class="text-sm font-semibold text-text-secondary mb-1 print:text-xs">
                                    {job.company}
                                </p>
                                <ul class="list-disc list-outside ml-5 space-y-1 print:ml-3 print:space-y-0.5">
                                    {job.achievements.map((achievement) => (
                                        <li class="text-text-secondary text-sm leading-relaxed print:text-xs print:leading-tight">
                                            {achievement}
                                        </li>
                                    ))}
                                </ul>
                            </div>
                        ))}
                    </div>
                </section>

                <!-- Projects -->
                <section class="mb-6 print:mb-3">
                    <h2 class="text-xl font-bold text-accent-blue mb-3 pb-1 border-b-2 border-accent-blue/30 print:text-base print:mb-2">
                        PROJECTS
                    </h2>
                    <div class="space-y-3 print:space-y-1.5">
                        {projects.map((project) => (
                            <div>
                                <h3 class="text-base font-bold text-text-primary mb-1 print:text-xs print:mb-0.5">
                                    {project.url ? (
                                        <a
                                            href={project.url}
                                            target="_blank"
                                            rel="noopener noreferrer"
                                            class="hover:text-accent-blue transition-colors"
                                        >
                                            {project.name}
                                        </a>
                                    ) : (
                                        project.name
                                    )}
                                    {project.url && (
                                        <span class="text-text-tertiary font-normal ml-1.5 text-xs print:ml-1">
                                            - {project.url.replace('https://', '')}
                                        </span>
                                    )}
                                </h3>
                                <p class="text-text-secondary text-sm leading-relaxed mb-1 print:text-xs print:mb-0.5 print:leading-tight">
                                    {project.description}
                                </p>
                                <p class="text-text-tertiary text-xs print:text-xs">
                                    {project.tech.join(' • ')}
                                </p>
                            </div>
                        ))}
                    </div>
                </section>

                <!-- Awards -->
                <section class="mb-6 print:mb-3">
                    <h2 class="text-xl font-bold text-accent-blue mb-3 pb-1 border-b-2 border-accent-blue/30 print:text-base print:mb-2">
                        AWARDS
                    </h2>
                    <div class="space-y-3 print:space-y-1.5">
                        {awards.map((award) => (
                            <div>
                                <h3 class="text-base font-bold text-text-primary mb-1 print:text-xs print:mb-0.5">
                                    {award.title} - {award.project}
                                </h3>
                                <p class="text-text-secondary text-sm leading-relaxed print:text-xs print:leading-tight">
                                    {award.description}
                                </p>
                            </div>
                        ))}
                    </div>
                </section>

                <!-- Education -->
                <section class="mb-6 print:mb-2">
                    <h2 class="text-xl font-bold text-accent-blue mb-3 pb-1 border-b-2 border-accent-blue/30 print:text-base print:mb-2">
                        EDUCATION
                    </h2>
                    <div class="space-y-2 print:space-y-1">
                        {education.map((edu) => (
                            <div class="flex justify-between items-start">
                                <div class="flex-1">
                                    <h3 class="text-base font-bold text-text-primary print:text-xs">
                                        {edu.school}
                                        <span class="text-text-secondary font-normal">, {edu.location}</span>
                                    </h3>
                                    <p class="text-text-secondary text-sm print:text-xs">
                                        {edu.degree}
                                        {edu.detail && (
                                            <span class="block text-text-tertiary text-xs mt-0.5">{edu.detail}</span>
                                        )}
                                    </p>
                                </div>
                                <span class="text-sm text-text-tertiary whitespace-nowrap ml-4 print:text-xs">
                                    {edu.period}
                                </span>
                            </div>
                        ))}
                    </div>
                </section>
            </div>

            <!-- Footer -->
            <div class="text-center text-text-tertiary text-xs print:hidden mt-8">
                <p class="mb-1">
                    <a href="/" class="text-accent-blue hover:underline">← Back to main site</a>
                </p>
                <p>Last updated: {new Date().toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}</p>
            </div>

        </div>
    </div>
</Layout>

<style>
    @media print {
        @page {
            size: letter;
            margin: 0.4in 0.5in;
        }

        * {
            -webkit-print-color-adjust: exact;
            print-color-adjust: exact;
        }

        body {
            background: white !important;
            color: black !important;
            font-size: 9pt !important;
            line-height: 1.3 !important;
        }

        /* Hide buttons */
        button, .btn {
            display: none !important;
        }

        /* Optimize colors for print */
        .text-accent-blue,
        .border-accent-blue {
            color: #000 !important;
            border-color: #000 !important;
        }

        .text-text-primary,
        .text-text-secondary,
        .text-text-tertiary {
            color: #000 !important;
        }

        a {
            color: #000 !important;
            text-decoration: none !important;
        }

        /* Force single page */
        html, body {
            height: auto !important;
            overflow: visible !important;
        }

        /* Prevent page breaks */
        section {
            page-break-inside: avoid !important;
            break-inside: avoid !important;
        }

        h1, h2, h3 {
            page-break-after: avoid !important;
            break-after: avoid !important;
        }

        /* Compact spacing */
        .container {
            max-width: 100% !important;
            padding: 0 !important;
        }

        /* Reduce all margins */
        section {
            margin-bottom: 0.15in !important;
        }

        h2 {
            margin-bottom: 0.08in !important;
            font-size: 11pt !important;
        }

        h3 {
            font-size: 9.5pt !important;
        }

        p, li, span {
            font-size: 8.5pt !important;
            line-height: 1.25 !important;
        }

        ul {
            margin-top: 0.03in !important;
        }

        li {
            margin-bottom: 0.02in !important;
        }
    }
</style>
