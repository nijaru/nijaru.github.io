---
import Layout from "../layouts/Layout.astro";
import ReflectionText from "../components/ReflectionText";
import TextGlow from "../components/TextGlow";
import BlogPostPreview from "../components/BlogPostPreview";
import { readFileSync } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';
import ArrowLink from "../components/ArrowLink";
import SectionHeading from "../components/SectionHeading";
import SocialLinks from "../components/SocialLinks";
import { getCollection } from 'astro:content';

// Get all blog posts from the collection
const blogEntries = await getCollection('blog', ({ data }) => {
  // Filter out draft posts in production
  return import.meta.env.PROD ? !data.draft : true;
});

// Format and prepare post data
// Calculate reading time
function calculateReadingTime(text) {
    const wordsPerMinute = 200;
    const words = text.trim().split(/\s+/).length;
    const minutes = Math.ceil(words / wordsPerMinute);
    return `${minutes} min read`;
}

const allPosts = blogEntries
  .map(post => {
    // Format the date for display
    const formattedDate = post.data.pubDate.toLocaleDateString("en-US", {
      year: "numeric",
      month: "long",
      day: "numeric",
    });
    
    // Calculate reading time
    const readingTime = calculateReadingTime(post.body);
    
    return {
      url: `/blog/${post.slug}`,
      title: post.data.title,
      pubDate: post.data.pubDate,
      formattedDate: formattedDate,
      excerpt: post.data.description,
      tags: post.data.tags,
      readingTime: readingTime
    };
  })
  // Sort posts by date (newest first)
  .sort((a, b) => b.pubDate.getTime() - a.pubDate.getTime());

// Get the most recent post (or undefined if no posts)
const mostRecentPost = allPosts.length > 0 ? allPosts[0] : undefined;

// Load GitHub repos directly at build time
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
const reposPath = join(__dirname, '../../public/data/pinned-repos.json');
const githubRepos = JSON.parse(readFileSync(reposPath, 'utf-8')).slice(0, 6);
---

<Layout 
    title="Nick Russo - Software Developer" 
    description="Software developer specializing in backend systems, distributed applications, and AI. Building with Python, Go, Rust, and modern web technologies."
>
    <!-- Hero Section -->
    <section class="section-lg">
        <div class="container container-md">
            <div class="text-center">
                <h1 class="heading-1">
                    <span class="text-accent-blue">Nick Russo</span>
                </h1>
                <p class="body-large mb-12">
                    Software developer specializing in backend systems, distributed applications, and AI. 
                    Building reliable solutions with Python, Go, Rust, and modern web technologies.
                </p>
                <SocialLinks />
            </div>
        </div>
    </section>

    <div class="divider"></div>

    <!-- About Section -->
    <section class="section">
        <div class="container container-sm">
            <div class="text-center mb-12">
                <h2 class="heading-2">About</h2>
                <p class="body-normal text-text-secondary">
                    Building reliable solutions across backend systems and AI
                </p>
            </div>
            <div class="space-y-12">
                <div class="space-y-6">
                    <p class="body-large text-text-secondary leading-relaxed">
                        I focus on backend development, distributed systems, and AI applications. 
                        My work involves building scalable, reliable solutions using modern languages and frameworks.
                    </p>
                    <p class="body-normal text-text-secondary leading-relaxed">
                        Currently exploring database innovations, high-performance computing with Mojo and Rust, 
                        and developing AI-powered tools that solve real-world problems.
                    </p>
                </div>
                <div class="border-t pt-8" style="border-color: var(--color-border-subtle);">
                    <p class="body-normal text-text-secondary leading-relaxed">
                        Over 10 years of coding experience. Over 15 years exploring Linux systems. 
                        Always finding new ways to break things with code. Currently fascinated by 
                        the intersection of AI and developer tooling.
                    </p>
                </div>
                <div class="text-center">
                    <a href="/about" class="link-primary link-arrow">
                        Learn more
                    </a>
                </div>
            </div>
        </div>
    </section>

    {mostRecentPost && (
        <>
            <div class="divider"></div>
            
            <!-- Recent Writing -->
            <section class="section">
                <div class="container container-sm">
                    <div class="text-center mb-12">
                        <h2 class="heading-2">Latest Writing</h2>
                        <p class="body-normal text-text-secondary">
                            Thoughts on software development, AI, and technology
                        </p>
                    </div>
                    
                    <article class="border-b pb-8" style="border-color: var(--color-border-subtle);">
                        <a href={mostRecentPost.url} class="clickable-item">
                            <div class="flex items-center justify-between text-text-tertiary body-small mb-4">
                                <time datetime={mostRecentPost.pubDate.toISOString()}>
                                    {mostRecentPost.formattedDate}
                                </time>
                                <span>{mostRecentPost.readingTime}</span>
                            </div>
                            
                            <h3 class="heading-2 mb-4 text-text-primary">
                                {mostRecentPost.title}
                            </h3>
                            
                            <p class="body-normal text-text-secondary leading-relaxed mb-6">
                                {mostRecentPost.excerpt}
                            </p>
                            
                            <div class="flex items-center gap-3">
                                {mostRecentPost.tags.map((tag) => (
                                    <span class="body-small text-text-tertiary">#{tag}</span>
                                ))}
                            </div>
                        </a>
                    </article>
                    
                    <div class="text-center mt-8">
                        <a href="/blog" class="btn btn-secondary link-arrow">
                            All posts
                        </a>
                    </div>
                </div>
            </section>
        </>
    )}

    <div class="divider"></div>

    <!-- Projects -->
    <section class="section">
        <div class="container container-sm">
            <div class="text-center mb-12">
                <h2 class="heading-2">Featured Projects</h2>
                <p class="body-normal text-text-secondary">
                    Open source projects and experiments from GitHub
                </p>
            </div>
            
            <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                {githubRepos.map((repo) => (
                    <div class="group">
                        <a
                            href={repo.html_url}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="block"
                        >
                            <h3 class="text-lg font-medium text-white group-hover:text-accent-blue transition-colors mb-2">
                                {repo.name}
                            </h3>
                            <p class="text-gray-300 text-sm mb-3">
                                {repo.description || "No description available"}
                            </p>
                            <div class="flex items-center space-x-4 text-xs text-gray-400">
                                {repo.language && <span>{repo.language}</span>}
                                <span>â˜… {repo.stargazers_count || 0}</span>
                            </div>
                        </a>
                    </div>
                ))}
            </div>
            
            <div class="text-center mt-12">
                <a href="/projects" class="btn btn-secondary link-arrow">
                    View all projects
                </a>
            </div>
        </div>
    </section>
</Layout>
